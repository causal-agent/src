<?xml version="1.0"?>
<root>
    <item>
        <name>Inverted shift</name>
        <identifier>private.inverted_shift</identifier>

        <modifier_not>
            ModifierFlag::COMMAND_L,
            ModifierFlag::COMMAND_R,
            ModifierFlag::CONTROL_L,
            ModifierFlag::CONTROL_R,
            ModifierFlag::OPTION_L,
            ModifierFlag::OPTION_R,
            ModifierFlag::FN,
        </modifier_not>

        <appendix>Swap minus and underscore</appendix>

        <autogen>
            __KeyToKey__
            KeyCode::MINUS, ModifierFlag::NONE,
            KeyCode::MINUS, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::MINUS, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::MINUS
        </autogen>

        <appendix>Swap backslash and pipe</appendix>

        <autogen>
            __KeyToKey__
            KeyCode::BACKSLASH, ModifierFlag::NONE,
            KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::BACKSLASH, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::BACKSLASH
        </autogen>

        <appendix>Swap square brackets and braces</appendix>

        <autogen>
            __KeyToKey__
            KeyCode::BRACKET_LEFT, ModifierFlag::NONE,
            KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::BRACKET_LEFT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::BRACKET_LEFT
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,
            KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::BRACKET_RIGHT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::BRACKET_RIGHT
        </autogen>

        <appendix>Swap numbers and symbols</appendix>

        <autogen>
            __KeyToKey__
            KeyCode::KEY_1, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_1
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_2, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_2
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_3
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_4
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_5, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_5
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_6, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_6
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_7, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_7
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_8, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_8
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_9, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_9
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_0, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::KEY_0
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_1,
            KeyCode::KEY_1, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_2,
            KeyCode::KEY_2, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_3,
            KeyCode::KEY_3, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_4,
            KeyCode::KEY_4, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_5,
            KeyCode::KEY_5, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_6,
            KeyCode::KEY_6, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_7,
            KeyCode::KEY_7, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_8,
            KeyCode::KEY_8, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_9,
            KeyCode::KEY_9, ModifierFlag::SHIFT_L
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::KEY_0,
            KeyCode::KEY_0, ModifierFlag::SHIFT_L
        </autogen>
    </item>

    <devicevendordef>
        <vendorname>LEOPOLD</vendorname>
        <vendorid>0x0853</vendorid>
    </devicevendordef>

    <deviceproductdef>
        <productname>FC660C</productname>
        <productid>0x0134</productid>
    </deviceproductdef>

    <item>
        <name>Leopold media control</name>
        <identifier>private.leopold_media_control</identifier>
        <device_only>DeviceVendor::LEOPOLD, DeviceProduct::FC660C</device_only>

        <appendix>Bind ctrl help and delete to volume control</appendix>

        <autogen>
            __KeyToKey__
            KeyCode::HELP, ModifierFlag::CONTROL_R,
            ConsumerKeyCode::VOLUME_UP
        </autogen>
        <autogen>
            __KeyToKey__
            KeyCode::FORWARD_DELETE, ModifierFlag::CONTROL_R,
            ConsumerKeyCode::VOLUME_DOWN
        </autogen>

        <appendix>Bind help and delete to music play and next</appendix>

        <autogen>__KeyToKey__ KeyCode::HELP, ConsumerKeyCode::MUSIC_PLAY</autogen>
        <autogen>__KeyToKey__ KeyCode::FORWARD_DELETE, ConsumerKeyCode::MUSIC_NEXT</autogen>
    </item>
</root>
